echo "%admin ALL=(ALL) ALL" >> /etc/sudoers.d/admin

date -d "+180 days" +%F

    1. Create the new file /etc/sudoers.d/consultants and add the following content to it. You can use the sudo vim /etc/sudoers.d/consultants command to perform this step. 
       %consultants  ALL=(ALL) ALL
       
             
             
             
              # Overrides default umask configuration
       if [ $UID -gt 199 ] && [ "`id -gn`" = "`id -un`" ]; then
           umask 007
       else
           umask 022
       fi
       
      
      
       if you want 022 for all users
       
       # Overrides default umask configuration
umask 022






ip link show - display interfaces
ip -S link show (interfaces)- to display traffic
ip addr show - display ip address
ip route - check route
ss -ta - display socket statistic - troubleshouting port and services
tracepath, traceroute - to reach remoste host through multiple routers
nmcli con show - display a list of all connection
nmcli con show --active - list only active connection




       
       add a connection
       
       nmcli con add con-name eno2 type ethernet ifname eno2 \
ipv4.address 192.168.0.5/24 ipv4.gateway 192.168.0.254
       
       nmcli con mod static-ens3 ipv4.address 192.0.2.2/24 \
ipv4.gateway 192.0.2.254
       
       
       
       configure static network connection in rehdat 8 (by modifying ifcfg-* file
       
       DEVICE=INTERFACE NAME
       BOOTPROTO=NONE
       ONBOOT=YES
       IPADDR= IP ADDRESS
       PREFIX= 24 BY EXAMPLE
       GATEWAY= DEFAULT GATEWAY
       DOMAIN=DOMAIN NAME
       
       systemctl start NetworkManager
       systemctl stop NetworkManager
       systemctl status NetworkManager
       systemctl restart NetworkManager
       nmcli connection reload
       nmcli con load /etc/sysconfig/network-scripts/ifcfg-interface name
       nmcli con up "interface name"
       
       by entering command in command line
       
       nmcli con mod enp0s3 ipv4.addresses 192.168.0.1/24
       nmcli con mod enp0s3 ipv4.gateway 192.168.0.1
       nmcli con mod enp0s3 ipv4.method manual
       nmcli con mod enp0s3 ipv4.dns 192.168.0.1
       
       
       hostnamectl set-hostname host.example.com
       hostnamectl status
       
       To edit network connection
       nmcli con edit interface name
       print
       set (options)
       save persistent
       activate interface name
       
       
       you can create a YAML file to edit the connction
       
       ~/set-default-gateway.yml
       
       ---
       routes:
       - destination: ip addr /24
       next-hop-address: ip
       next-hop-interface: interface name
        nmstatectl set ~/set-default-gateway.yml
        
        
        
        Display all socket active or inactive
        systemctl list-units --type=socket --all
        
        
        
        display all service unit
        systemctl list-units --type=service
        
        List the enabled or disabled states of all service units
        systemtctl list-unit-files --type=service
        
        Display dependencies
        systemctl list-dependencies sshd.service
        
        
        
        prevent service to start
        systemctl mask sendmail.service
        systemctl unmask sendmail
        
        systemctl is-active servicename
        systemctl is-enabled servicename
        
        systemctl start servicename
        systemctl stop servicename
        
        systemctl enable servicename
        systemctl disable servicename
        
        
        
        ssh-keygen -f user@server
        ssh-copy-id -i (keypath) user@server
        ssh -i (keypath) user@server hostname
        eval $(ssh-agent)
        ssh-add keypath
        
        parted /dev/sdb1/ mklabel msdos
        parted /dev/sdb1/ mklabel gpt
        parted /dev/vdb mkpart primary xfs 2048s 1000MB
        mkpart
        udevadm settle
        mkfs.ext4 ou xfs /dev/sdb1
        
        Verifier size of journalctl storage
        journalctl | grep -E 'Runtime|System journal'
        
        
        
        Ubuntu command
        To add a user
        
        adduser jumpcloud
        
        To confirm that the newly added user was created, view the
        cat /etc/passwd | grep username
        
        id username
        
        Add the new user to the sudo group
        usermod -aG sudo username
        
        groups username
        
        the sudoers file should be accessed by executing the command
        visudo
        How to restrict sudo users from executing certain commands
As we pointed out earlier, you might need to limit sudo users from running certain system commands. To accomplish this, you need to create a sudo rule in the  /etc/sudoers.d directory.

For demonstration, we will create a rule called jumpcloud which restricts the sudo user from upgrading the packages to their latest versions.

# vim /etc/sudoers.d/jumpcloud 

Next, copy and paste the line shown and save the changes.

jumpcloud ALL=(ALL)!/usr/bin/apt upgrade

The rule indicates that the jumpcloud user can execute all commands as the root user with the exception of the apt upgrade command. Note that you need to provide the full path of the command prefixed by an exclamation mark.

To find the full path of a command, use the which command syntax as shown.

$ which command

When the user tries to 
How to run specific sudo commands without a password 
Sometimes, you might need to run some commands without being prompted for a password. This is particularly helpful if you are running a script containing a sudo command. 

To achieve this, use the directive NOPASSWD followed by the full path to the command. In the example below, the user can update the package lists without a password prompt.
 
upgrade the packages, an error is splashed on the screen indicating that the user is not allowed to do so.
jumpcloud ALL=(ALL) NOPASSWD: /usr/bin/apt update


Assign Static IP Address On Ubuntu 20.04 LTS Server
In Ubuntu 20.04 LTS server, network configuration is controlled and managed by netplan utility.
But during the installation, cloud-init configure a dynamic ip to interface on server if the dhcp server is available. 
so, to configure a static ip, first we must make sure and confirm that network interface is not managed by cloud-init.

Open cloud-init file “cat /etc/cloud/cloud.cfg.d/subiquity-disable-cloudinit-networking.cfg” and make sure entry “network: {config: disabled}” is there.
In case this entry is missing, then add it manually.

To edit network ip address
vi /etc/netplan/00-installer-config.yaml

Run the following “netplan apply” command to make the above changes into the effect



        
        
        
        
